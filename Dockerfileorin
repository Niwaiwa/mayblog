# 使用官方的 Python 執行環境作為基本的 Docker 影像
FROM python:3.6-alpine
RUN apk add --no-cache g++ linux-headers libffi-dev openssl-dev python3-dev libxml2-dev libxslt-dev

# alpine 沒有時區套件，安裝後設定時區，然後刪掉套件
RUN apk add --no-cache tzdata
RUN cp /usr/share/zoneinfo/Asia/Taipei /etc/localtime \
    && echo "Asia/Taipei" > /etc/timezone
RUN apk del tzdata

# 不常改動且安裝費時，分離出來讓 Docker cache 住，避免每次重建
# RUN pip3 install --trusted-host pypi.python.org numpy==1.17.4 pandas==0.25.3

# 安裝 requirements.txt 中所列的必要套件
COPY requirements.txt /
RUN pip3 install --trusted-host pypi.python.org -r requirements.txt

# 複製目前目錄下的內容，放進 Docker 容器中的 /app
COPY . /app

# 設定工作目錄為 /myapp
WORKDIR /app

# RUN chmod +x /app/docker/wait-for-it.sh
# ENV UWSGI_INI /myapp/uwsgi.ini

# 讓 5050 連接埠可以從 Docker 容器外部存取
EXPOSE 5000

# 當 Docker 容器啟動時，自動執行 index.py
# CMD ["python", "index.py"]
