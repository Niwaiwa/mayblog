[uwsgi]
# Http access port.
# If this option comes into effect, we can visit our web site on http://[our IP]:[Port]
# http=:5005

# Uwsgi's ip and port when it is loaded by Nginx
socket=:5000

# Point to the main directory of the Web Site
chdir=/myapp

# Python startup file
wsgi-file=/myapp/app.py

# The application variable of Python Flask Core Oject
callable=app

# Write the uwsgi log
# req-logger = file:/myapp/logs/reqlog.log

# The maximum numbers of Processes
processes=9

# The maximum numbers of Threads
# threads=2

# Uwsgi 狀態管理
stats=127.0.0.1:9191
safe-pidfile=/tmp/uwsgi.pid

die-on-term = true
vacuum = true
master = true

# Uwsgi gevent asynchronous/non-blocking modes, threads option not work with gevent
gevent = 100
limit-as = 512
listen = 100
reload-on-as = 256
reload-on-rss = 192
max-requests = 2000
gevent-early-monkey-patch = true
#wsgi-env-behaviour = holy
lazy-apps = true

# log 相關
#set-placeholder = log_dir=/myapp/logs
#set-placeholder = log_prefix=uwsgi-whale-
#set-placeholder = log_num=14
#pidfile = /var/run/uwsgi-myservice.pid
#logto = %(log_dir)/%(log_prefix)@(exec://date +%%Y-%%m-%%d).log
#log-reopen = true
## 每日輪換 0點1分
#unique-cron = 1 0 -1 -1 -1 { sleep 66 && kill -HUP $(cat %(pidfile)) && ls -tp %(log_dir)/%(log_prefix)* | grep -v '/$' | tail -n +%(log_num) | xargs -d '\n' -r rm --; } &
